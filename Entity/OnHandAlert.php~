<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * OnHandAlert
 *
 * @ORM\Table(options={"collate"="utf8mb4_unicode_ci", "charset"="utf8mb4"})
 * @ORM\Entity(repositoryClass="AppBundle\Entity\OnHandAlertRepository")
 * @ORM\HasLifecycleCallbacks
 */
class OnHandAlert
{

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string
     *
     * @ORM\Column(name="created_at", type="datetime")
     */
    private $createdAt;

    /**
     * @var string
     *
     * @ORM\Column(name="match_code", type="string", length=1024)
     */
    private $matchCode;

    /**
     * @var string
     *
     * @ORM\Column(name="match_value", type="string", length=1024, nullable=true)
     */
    private $matchValue;

    /**
     * @var string
     *
     * @ORM\Column(name="trigger_code", type="string", length=1024)
     */
    private $triggerCode;

    /**
     * @var string
     *
     * @ORM\Column(name="warehouse_ids", type="string", length=1024)
     */
    private $warehouseIds;

    /**
     * @var string
     *
     * @ORM\Column(name="email", type="string", length=1024, nullable=true)
     */
    private $email;

    /**
     * @var string
     *
     * @ORM\Column(name="sms", type="string", length=1024, nullable=true)
     */
    private $sms;

    /**
     * @var string
     *
     * @ORM\Column(name="status", type="string", length=1024)
     */
    private $status;

    // Extra parameters used to handle alerts once data is retrieved from Brightpearl
    private $alertItem;
    private $threshold;
    private $actualValue;

    /**
     * Gets triggered only on insert
     * @ORM\PrePersist
     */
    public function onPrePersist()
    {
        $this->setCreatedAt(new \DateTime("now"));
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     *
     * @return OnHandAlert
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set matchCode
     *
     * @param string $matchCode
     *
     * @return OnHandAlert
     */
    public function setMatchCode($matchCode)
    {
        $this->matchCode = $matchCode;

        return $this;
    }

    /**
     * Get matchCode
     *
     * @return string
     */
    public function getMatchCode()
    {
        return $this->matchCode;
    }

    /**
     * Set matchValue
     *
     * @param string $matchValue
     *
     * @return OnHandAlert
     */
    public function setMatchValue($matchValue)
    {
        $this->matchValue = $matchValue;

        return $this;
    }

    /**
     * Get matchValue
     *
     * @return string
     */
    public function getMatchValue()
    {
        return $this->matchValue;
    }

    /**
     * Set triggerCode
     *
     * @param string $triggerCode
     *
     * @return OnHandAlert
     */
    public function setTriggerCode($triggerCode)
    {
        $this->triggerCode = $triggerCode;

        return $this;
    }

    /**
     * Get triggerCode
     *
     * @return string
     */
    public function getTriggerCode()
    {
        return $this->triggerCode;
    }

    /**
     * Set warehouseIds
     *
     * @param array $warehouseIds
     *
     * @return OnHandAlert
     */
    public function setWarehouseIds($warehouseIds)
    {
        $this->warehouseIds = implode(',', $warehouseIds);

        return $this;
    }

    /**
     * Get triggerValue
     *
     * @return string
     */
    public function getWarehouseIds()
    {
        return $this->warehouseIds;
    }

    /**
     * Set email
     *
     * @param string $email
     *
     * @return OnHandAlert
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set sms
     *
     * @param string $sms
     *
     * @return OnHandAlert
     */
    public function setSms($sms)
    {
        $this->sms = $sms;

        return $this;
    }

    /**
     * Get sms
     *
     * @return string
     */
    public function getSms()
    {
        return $this->sms;
    }

    /**
     * Set status
     *
     * @param string $status
     *
     * @return OnHandAlert
     */
    public function setStatus($status)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Get status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Set threshold
     *
     * @param string $threshold
     *
     * @return OnHandAlert
     */
    public function setThreshold($threshold)
    {
        $this->threshold = $threshold;

        return $this;
    }

    /**
     * Get threshold
     *
     * @return string
     */
    public function getThreshold()
    {
        return $this->threshold;
    }

    /**
     * Set actualValue
     *
     * @param string $actualValue
     *
     * @return OnHandAlert
     */
    public function setActualValue($actualValue)
    {
        $this->actualValue = $actualValue;

        return $this;
    }

    /**
     * Get actualValue
     *
     * @return string
     */
    public function getActualValue()
    {
        return $this->actualValue;
    }

    /**
     * Set alertItem
     *
     * @param \AppBundle\Entity\AlertItem $alertItem
     *
     * @return OnHandAlert
     */
    public function setAlertItem(\AppBundle\Entity\AlertItem $alertItem)
    {
        $this->alertItem = $alertItem;

        return $this;
    }

    /**
     * Get alertItem
     *
     * @return \AppBundle\Entity\AlertItem
     */
    public function getAlertItem()
    {
        return $this->alertItem;
    }

}
