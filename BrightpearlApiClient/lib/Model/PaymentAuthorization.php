<?php
/**
 * PaymentAuthorization
 *
 * PHP version 5
 *
 * @category Class
 * @package  BrightpearlApiClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BrightpearlApiClient\Model;

use \ArrayAccess;
/**
 * PaymentAuthorization Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     BrightpearlApiClient
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PaymentAuthorization implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'code' => 'string',
        'provider' => 'string',
        'amount' => '\BrightpearlApiClient\Model\MonetaryValue',
        'order_id' => 'int',
        'fully_captured' => 'bool',
        'expires' => 'string',
        'created' => 'string',
        'captures' => '\BrightpearlApiClient\Model\Capture[]'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'code' => 'code',
        'provider' => 'provider',
        'amount' => 'amount',
        'order_id' => 'orderId',
        'fully_captured' => 'fullyCaptured',
        'expires' => 'expires',
        'created' => 'created',
        'captures' => 'captures'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'code' => 'setCode',
        'provider' => 'setProvider',
        'amount' => 'setAmount',
        'order_id' => 'setOrderId',
        'fully_captured' => 'setFullyCaptured',
        'expires' => 'setExpires',
        'created' => 'setCreated',
        'captures' => 'setCaptures'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'code' => 'getCode',
        'provider' => 'getProvider',
        'amount' => 'getAmount',
        'order_id' => 'getOrderId',
        'fully_captured' => 'getFullyCaptured',
        'expires' => 'getExpires',
        'created' => 'getCreated',
        'captures' => 'getCaptures'
    );
  
    
    /**
      * $id 
      * @var int
      */
    protected $id;
    
    /**
      * $code 
      * @var string
      */
    protected $code;
    
    /**
      * $provider 
      * @var string
      */
    protected $provider;
    
    /**
      * $amount 
      * @var \BrightpearlApiClient\Model\MonetaryValue
      */
    protected $amount;
    
    /**
      * $order_id 
      * @var int
      */
    protected $order_id;
    
    /**
      * $fully_captured 
      * @var bool
      */
    protected $fully_captured;
    
    /**
      * $expires 
      * @var string
      */
    protected $expires;
    
    /**
      * $created 
      * @var string
      */
    protected $created;
    
    /**
      * $captures 
      * @var \BrightpearlApiClient\Model\Capture[]
      */
    protected $captures;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->code = $data["code"];
            $this->provider = $data["provider"];
            $this->amount = $data["amount"];
            $this->order_id = $data["order_id"];
            $this->fully_captured = $data["fully_captured"];
            $this->expires = $data["expires"];
            $this->created = $data["created"];
            $this->captures = $data["captures"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets code
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }
  
    /**
     * Sets code
     * @param string $code 
     * @return $this
     */
    public function setCode($code)
    {
        
        $this->code = $code;
        return $this;
    }
    
    /**
     * Gets provider
     * @return string
     */
    public function getProvider()
    {
        return $this->provider;
    }
  
    /**
     * Sets provider
     * @param string $provider 
     * @return $this
     */
    public function setProvider($provider)
    {
        
        $this->provider = $provider;
        return $this;
    }
    
    /**
     * Gets amount
     * @return \BrightpearlApiClient\Model\MonetaryValue
     */
    public function getAmount()
    {
        return $this->amount;
    }
  
    /**
     * Sets amount
     * @param \BrightpearlApiClient\Model\MonetaryValue $amount
     * @return $this
     */
    public function setAmount($amount)
    {
        
        $this->amount = $amount;
        return $this;
    }
    
    /**
     * Gets order_id
     * @return int
     */
    public function getOrderId()
    {
        return $this->order_id;
    }
  
    /**
     * Sets order_id
     * @param int $order_id 
     * @return $this
     */
    public function setOrderId($order_id)
    {
        
        $this->order_id = $order_id;
        return $this;
    }
    
    /**
     * Gets fully_captured
     * @return bool
     */
    public function getFullyCaptured()
    {
        return $this->fully_captured;
    }
  
    /**
     * Sets fully_captured
     * @param bool $fully_captured 
     * @return $this
     */
    public function setFullyCaptured($fully_captured)
    {
        
        $this->fully_captured = $fully_captured;
        return $this;
    }
    
    /**
     * Gets expires
     * @return string
     */
    public function getExpires()
    {
        return $this->expires;
    }
  
    /**
     * Sets expires
     * @param string $expires 
     * @return $this
     */
    public function setExpires($expires)
    {
        
        $this->expires = $expires;
        return $this;
    }
    
    /**
     * Gets created
     * @return string
     */
    public function getCreated()
    {
        return $this->created;
    }
  
    /**
     * Sets created
     * @param string $created 
     * @return $this
     */
    public function setCreated($created)
    {
        
        $this->created = $created;
        return $this;
    }
    
    /**
     * Gets captures
     * @return \BrightpearlApiClient\Model\Capture[]
     */
    public function getCaptures()
    {
        return $this->captures;
    }
  
    /**
     * Sets captures
     * @param \BrightpearlApiClient\Model\Capture[] $captures
     * @return $this
     */
    public function setCaptures($captures)
    {
        
        $this->captures = $captures;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\BrightpearlApiClient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\BrightpearlApiClient\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
