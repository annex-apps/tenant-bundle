<?php
/**
 * OrderParties
 *
 * PHP version 5
 *
 * @category Class
 * @package  BrightpearlApiClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BrightpearlApiClient\Model;

use \ArrayAccess;
/**
 * OrderParties Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     BrightpearlApiClient
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class OrderParties implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'delivery' => '\BrightpearlApiClient\Model\Address',
        'supplier' => '\BrightpearlApiClient\Model\Address',
        'customer' => '\BrightpearlApiClient\Model\Address',
        'billing' => '\BrightpearlApiClient\Model\Address'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'delivery' => 'delivery',
        'supplier' => 'supplier',
        'customer' => 'customer',
        'billing' => 'billing'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'delivery' => 'setDelivery',
        'supplier' => 'setSupplier',
        'customer' => 'setCustomer',
        'billing' => 'setBilling'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'delivery' => 'getDelivery',
        'supplier' => 'getSupplier',
        'customer' => 'getCustomer',
        'billing' => 'getBilling'
    );
  
    
    /**
      * $delivery 
      * @var \BrightpearlApiClient\Model\Address
      */
    protected $delivery;
    
    /**
      * $supplier 
      * @var \BrightpearlApiClient\Model\Address
      */
    protected $supplier;
    
    /**
      * $customer 
      * @var \BrightpearlApiClient\Model\Address
      */
    protected $customer;
    
    /**
      * $billing 
      * @var \BrightpearlApiClient\Model\Address
      */
    protected $billing;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->delivery = $data["delivery"];
            $this->supplier = $data["supplier"];
            $this->customer = $data["customer"];
            $this->billing = $data["billing"];
        }
    }
    
    /**
     * Gets delivery
     * @return \BrightpearlApiClient\Model\Address
     */
    public function getDelivery()
    {
        return $this->delivery;
    }
  
    /**
     * Sets delivery
     * @param \BrightpearlApiClient\Model\Address $delivery
     * @return $this
     */
    public function setDelivery($delivery)
    {
        
        $this->delivery = $delivery;
        return $this;
    }
    
    /**
     * Gets supplier
     * @return \BrightpearlApiClient\Model\Address
     */
    public function getSupplier()
    {
        return $this->supplier;
    }
  
    /**
     * Sets supplier
     * @param \BrightpearlApiClient\Model\Address $supplier
     * @return $this
     */
    public function setSupplier($supplier)
    {
        
        $this->supplier = $supplier;
        return $this;
    }
    
    /**
     * Gets customer
     * @return \BrightpearlApiClient\Model\Address
     */
    public function getCustomer()
    {
        return $this->customer;
    }
  
    /**
     * Sets customer
     * @param \BrightpearlApiClient\Model\Address $customer
     * @return $this
     */
    public function setCustomer($customer)
    {
        
        $this->customer = $customer;
        return $this;
    }
    
    /**
     * Gets billing
     * @return \BrightpearlApiClient\Model\Address
     */
    public function getBilling()
    {
        return $this->billing;
    }
  
    /**
     * Sets billing
     * @param \BrightpearlApiClient\Model\Address $billing
     * @return $this
     */
    public function setBilling($billing)
    {
        
        $this->billing = $billing;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\BrightpearlApiClient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\BrightpearlApiClient\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
