<?php
/**
 * Product
 *
 * PHP version 5
 *
 * @category Class
 * @package  BrightpearlApiClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Annex\TenantBundle\Services\BrightpearlApiClient\Model;

use \ArrayAccess;
/**
 * Product Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     BrightpearlApiClient
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Product implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'brand_id' => 'int',
        'product_type_id' => 'int',
        'nominal_code_stock' => 'string',
        'nominal_code_purchases' => 'string',
        'nominal_code_sales' => 'string',
        'season_ids' => 'int[]',
        'identity' => '\Annex\TenantBundle\Services\BrightpearlApiClient\Model\ProductIdentity',
        'stock' => '\Annex\TenantBundle\Services\BrightpearlApiClient\Model\ProductStock',
        'financial_details' => '\Annex\TenantBundle\Services\BrightpearlApiClient\Model\ProductFinancialDetails',
        'sales_channels' => '\Annex\TenantBundle\Services\BrightpearlApiClient\Model\SalesChannel[]',
        'variations' => '\Annex\TenantBundle\Services\BrightpearlApiClient\Model\ProductVariations[]',
        'composition' => '\Annex\TenantBundle\Services\BrightpearlApiClient\Model\ProductComposition',
        'custom_fields' => '\Annex\TenantBundle\Services\BrightpearlApiClient\Model\ProductCustomFields',
        'null_custom_fields' => 'string[]',
        'warehouses' => 'Object',
        'created_on' => 'string',
        'updated_on' => 'string',
        'reporting' => '\Annex\TenantBundle\Services\BrightpearlApiClient\Model\ProductReporting',
        'status' => 'string'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'brand_id' => 'brandId',
        'product_type_id' => 'productTypeId',
        'nominal_code_stock' => 'nominalCodeStock',
        'nominal_code_purchases' => 'nominalCodePurchases',
        'nominal_code_sales' => 'nominalCodeSales',
        'season_ids' => 'seasonIds',
        'identity' => 'identity',
        'stock' => 'stock',
        'financial_details' => 'financialDetails',
        'sales_channels' => 'salesChannels',
        'variations' => 'variations',
        'composition' => 'composition',
        'custom_fields' => 'customFields',
        'null_custom_fields' => 'nullCustomFields',
        'warehouses' => 'warehouses',
        'created_on' => 'createdOn',
        'updated_on' => 'updatedOn',
        'reporting' => 'reporting',
        'status' => 'status'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'brand_id' => 'setBrandId',
        'product_type_id' => 'setProductTypeId',
        'nominal_code_stock' => 'setNominalCodeStock',
        'nominal_code_purchases' => 'setNominalCodePurchases',
        'nominal_code_sales' => 'setNominalCodeSales',
        'season_ids' => 'setSeasonIds',
        'identity' => 'setIdentity',
        'stock' => 'setStock',
        'financial_details' => 'setFinancialDetails',
        'sales_channels' => 'setSalesChannels',
        'variations' => 'setVariations',
        'composition' => 'setComposition',
        'custom_fields' => 'setCustomFields',
        'null_custom_fields' => 'setNullCustomFields',
        'warehouses' => 'setWarehouses',
        'created_on' => 'setCreatedOn',
        'updated_on' => 'setUpdatedOn',
        'reporting' => 'setReporting',
        'status' => 'setStatus'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'brand_id' => 'getBrandId',
        'product_type_id' => 'getProductTypeId',
        'nominal_code_stock' => 'getNominalCodeStock',
        'nominal_code_purchases' => 'getNominalCodePurchases',
        'nominal_code_sales' => 'getNominalCodeSales',
        'season_ids' => 'getSeasonIds',
        'identity' => 'getIdentity',
        'stock' => 'getStock',
        'financial_details' => 'getFinancialDetails',
        'sales_channels' => 'getSalesChannels',
        'variations' => 'getVariations',
        'composition' => 'getComposition',
        'custom_fields' => 'getCustomFields',
        'null_custom_fields' => 'getNullCustomFields',
        'warehouses' => 'getWarehouses',
        'created_on' => 'getCreatedOn',
        'updated_on' => 'getUpdatedOn',
        'reporting' => 'getReporting',
        'status' => 'getStatus'
    );
  
    
    /**
      * $id 
      * @var int
      */
    protected $id;
    
    /**
      * $brand_id 
      * @var int
      */
    protected $brand_id;
    
    /**
      * $product_type_id 
      * @var int
      */
    protected $product_type_id;
    
    /**
      * $nominal_code_stock 
      * @var string
      */
    protected $nominal_code_stock;
    
    /**
      * $nominal_code_purchases 
      * @var string
      */
    protected $nominal_code_purchases;
    
    /**
      * $nominal_code_sales 
      * @var string
      */
    protected $nominal_code_sales;
    
    /**
      * $season_ids 
      * @var int[]
      */
    protected $season_ids;
    
    /**
      * $identity 
      * @var \BrightpearlApiClient\Model\ProductIdentity
      */
    protected $identity;
    
    /**
      * $stock 
      * @var \BrightpearlApiClient\Model\ProductStock
      */
    protected $stock;
    
    /**
      * $financial_details 
      * @var \BrightpearlApiClient\Model\ProductFinancialDetails
      */
    protected $financial_details;
    
    /**
      * $sales_channels 
      * @var \BrightpearlApiClient\Model\SalesChannel[]
      */
    protected $sales_channels;
    
    /**
      * $variations 
      * @var \BrightpearlApiClient\Model\ProductVariations[]
      */
    protected $variations;
    
    /**
      * $composition 
      * @var \BrightpearlApiClient\Model\ProductComposition
      */
    protected $composition;
    
    /**
      * $custom_fields 
      * @var \BrightpearlApiClient\Model\ProductCustomFields
      */
    protected $custom_fields;
    
    /**
      * $null_custom_fields 
      * @var string[]
      */
    protected $null_custom_fields;
    
    /**
      * $warehouses 
      * @var \BrightpearlApiClient\Model\ProductWarehouses
      */
    protected $warehouses;
    
    /**
      * $created_on 
      * @var string
      */
    protected $created_on;
    
    /**
      * $updated_on 
      * @var string
      */
    protected $updated_on;
    
    /**
      * $reporting 
      * @var \BrightpearlApiClient\Model\ProductReporting
      */
    protected $reporting;
    
    /**
      * $status 
      * @var string
      */
    protected $status;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->brand_id = $data["brand_id"];
            $this->product_type_id = $data["product_type_id"];
            $this->nominal_code_stock = $data["nominal_code_stock"];
            $this->nominal_code_purchases = $data["nominal_code_purchases"];
            $this->nominal_code_sales = $data["nominal_code_sales"];
            $this->season_ids = $data["season_ids"];
            $this->identity = $data["identity"];
            $this->stock = $data["stock"];
            $this->financial_details = $data["financial_details"];
            $this->sales_channels = $data["sales_channels"];
            $this->variations = $data["variations"];
            $this->composition = $data["composition"];
            $this->custom_fields = $data["custom_fields"];
            $this->null_custom_fields = $data["null_custom_fields"];
            $this->warehouses = $data["warehouses"];
            $this->created_on = $data["created_on"];
            $this->updated_on = $data["updated_on"];
            $this->reporting = $data["reporting"];
            $this->status = $data["status"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets brand_id
     * @return int
     */
    public function getBrandId()
    {
        return $this->brand_id;
    }
  
    /**
     * Sets brand_id
     * @param int $brand_id 
     * @return $this
     */
    public function setBrandId($brand_id)
    {
        
        $this->brand_id = $brand_id;
        return $this;
    }
    
    /**
     * Gets product_type_id
     * @return int
     */
    public function getProductTypeId()
    {
        return $this->product_type_id;
    }
  
    /**
     * Sets product_type_id
     * @param int $product_type_id 
     * @return $this
     */
    public function setProductTypeId($product_type_id)
    {
        
        $this->product_type_id = $product_type_id;
        return $this;
    }
    
    /**
     * Gets nominal_code_stock
     * @return string
     */
    public function getNominalCodeStock()
    {
        return $this->nominal_code_stock;
    }
  
    /**
     * Sets nominal_code_stock
     * @param string $nominal_code_stock 
     * @return $this
     */
    public function setNominalCodeStock($nominal_code_stock)
    {
        
        $this->nominal_code_stock = $nominal_code_stock;
        return $this;
    }
    
    /**
     * Gets nominal_code_purchases
     * @return string
     */
    public function getNominalCodePurchases()
    {
        return $this->nominal_code_purchases;
    }
  
    /**
     * Sets nominal_code_purchases
     * @param string $nominal_code_purchases 
     * @return $this
     */
    public function setNominalCodePurchases($nominal_code_purchases)
    {
        
        $this->nominal_code_purchases = $nominal_code_purchases;
        return $this;
    }
    
    /**
     * Gets nominal_code_sales
     * @return string
     */
    public function getNominalCodeSales()
    {
        return $this->nominal_code_sales;
    }
  
    /**
     * Sets nominal_code_sales
     * @param string $nominal_code_sales 
     * @return $this
     */
    public function setNominalCodeSales($nominal_code_sales)
    {
        
        $this->nominal_code_sales = $nominal_code_sales;
        return $this;
    }
    
    /**
     * Gets season_ids
     * @return int[]
     */
    public function getSeasonIds()
    {
        return $this->season_ids;
    }
  
    /**
     * Sets season_ids
     * @param int[] $season_ids 
     * @return $this
     */
    public function setSeasonIds($season_ids)
    {
        
        $this->season_ids = $season_ids;
        return $this;
    }
    
    /**
     * Gets identity
     * @return \BrightpearlApiClient\Model\ProductIdentity
     */
    public function getIdentity()
    {
        return $this->identity;
    }
  
    /**
     * Sets identity
     * @param \BrightpearlApiClient\Model\ProductIdentity $identity
     * @return $this
     */
    public function setIdentity($identity)
    {
        
        $this->identity = $identity;
        return $this;
    }
    
    /**
     * Gets stock
     * @return \BrightpearlApiClient\Model\ProductStock
     */
    public function getStock()
    {
        return $this->stock;
    }
  
    /**
     * Sets stock
     * @param \BrightpearlApiClient\Model\ProductStock $stock
     * @return $this
     */
    public function setStock($stock)
    {
        
        $this->stock = $stock;
        return $this;
    }
    
    /**
     * Gets financial_details
     * @return \BrightpearlApiClient\Model\ProductFinancialDetails
     */
    public function getFinancialDetails()
    {
        return $this->financial_details;
    }
  
    /**
     * Sets financial_details
     * @param \BrightpearlApiClient\Model\ProductFinancialDetails $financial_details
     * @return $this
     */
    public function setFinancialDetails($financial_details)
    {
        
        $this->financial_details = $financial_details;
        return $this;
    }
    
    /**
     * Gets sales_channels
     * @return \BrightpearlApiClient\Model\SalesChannel[]
     */
    public function getSalesChannels()
    {
        return $this->sales_channels;
    }
  
    /**
     * Sets sales_channels
     * @param \BrightpearlApiClient\Model\SalesChannel[] $sales_channels
     * @return $this
     */
    public function setSalesChannels($sales_channels)
    {
        
        $this->sales_channels = $sales_channels;
        return $this;
    }
    
    /**
     * Gets variations
     * @return \BrightpearlApiClient\Model\ProductVariations[]
     */
    public function getVariations()
    {
        return $this->variations;
    }
  
    /**
     * Sets variations
     * @param \BrightpearlApiClient\Model\ProductVariations[] $variations
     * @return $this
     */
    public function setVariations($variations)
    {
        
        $this->variations = $variations;
        return $this;
    }
    
    /**
     * Gets composition
     * @return \BrightpearlApiClient\Model\ProductComposition
     */
    public function getComposition()
    {
        return $this->composition;
    }
  
    /**
     * Sets composition
     * @param \BrightpearlApiClient\Model\ProductComposition $composition
     * @return $this
     */
    public function setComposition($composition)
    {
        
        $this->composition = $composition;
        return $this;
    }
    
    /**
     * Gets custom_fields
     * @return \BrightpearlApiClient\Model\ProductCustomFields
     */
    public function getCustomFields()
    {
        return $this->custom_fields;
    }
  
    /**
     * Sets custom_fields
     * @param \BrightpearlApiClient\Model\ProductCustomFields $custom_fields
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        
        $this->custom_fields = $custom_fields;
        return $this;
    }
    
    /**
     * Gets null_custom_fields
     * @return string[]
     */
    public function getNullCustomFields()
    {
        return $this->null_custom_fields;
    }
  
    /**
     * Sets null_custom_fields
     * @param string[] $null_custom_fields 
     * @return $this
     */
    public function setNullCustomFields($null_custom_fields)
    {
        
        $this->null_custom_fields = $null_custom_fields;
        return $this;
    }
    
    /**
     * Gets warehouses
     * @return \BrightpearlApiClient\Model\ProductWarehouses
     */
    public function getWarehouses()
    {
        return $this->warehouses;
    }
  
    /**
     * Sets warehouses
     * @param \BrightpearlApiClient\Model\ProductWarehouses $warehouses
     * @return $this
     */
    public function setWarehouses($warehouses)
    {
        
        $this->warehouses = $warehouses;
        return $this;
    }
    
    /**
     * Gets created_on
     * @return string
     */
    public function getCreatedOn()
    {
        return $this->created_on;
    }
  
    /**
     * Sets created_on
     * @param string $created_on 
     * @return $this
     */
    public function setCreatedOn($created_on)
    {
        
        $this->created_on = $created_on;
        return $this;
    }
    
    /**
     * Gets updated_on
     * @return string
     */
    public function getUpdatedOn()
    {
        return $this->updated_on;
    }
  
    /**
     * Sets updated_on
     * @param string $updated_on 
     * @return $this
     */
    public function setUpdatedOn($updated_on)
    {
        
        $this->updated_on = $updated_on;
        return $this;
    }
    
    /**
     * Gets reporting
     * @return \BrightpearlApiClient\Model\ProductReporting
     */
    public function getReporting()
    {
        return $this->reporting;
    }
  
    /**
     * Sets reporting
     * @param \BrightpearlApiClient\Model\ProductReporting $reporting
     * @return $this
     */
    public function setReporting($reporting)
    {
        
        $this->reporting = $reporting;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status 
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
