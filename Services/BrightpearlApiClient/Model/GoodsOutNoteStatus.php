<?php
/**
 * GoodsOutNoteStatus
 *
 * PHP version 5
 *
 * @category Class
 * @package  BrightpearlApiClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Annex\TenantBundle\Services\BrightpearlApiClient\Model;

use \ArrayAccess;
/**
 * GoodsOutNoteStatus Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     BrightpearlApiClient
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class GoodsOutNoteStatus implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'printed_on' => 'string',
        'printed' => 'bool',
        'shipped' => 'bool',
        'packed_by_id' => 'int',
        'packed_on' => 'string',
        'picked' => 'bool',
        'picked_on' => 'string',
        'packed' => 'bool',
        'shipped_on' => 'string',
        'printed_by_id' => 'int',
        'picked_by_id' => 'int',
        'shipped_by_id' => 'int'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'printed_on' => 'printedOn',
        'printed' => 'printed',
        'shipped' => 'shipped',
        'packed_by_id' => 'packedById',
        'packed_on' => 'packedOn',
        'picked' => 'picked',
        'picked_on' => 'pickedOn',
        'packed' => 'packed',
        'shipped_on' => 'shippedOn',
        'printed_by_id' => 'printedById',
        'picked_by_id' => 'pickedById',
        'shipped_by_id' => 'shippedById'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'printed_on' => 'setPrintedOn',
        'printed' => 'setPrinted',
        'shipped' => 'setShipped',
        'packed_by_id' => 'setPackedById',
        'packed_on' => 'setPackedOn',
        'picked' => 'setPicked',
        'picked_on' => 'setPickedOn',
        'packed' => 'setPacked',
        'shipped_on' => 'setShippedOn',
        'printed_by_id' => 'setPrintedById',
        'picked_by_id' => 'setPickedById',
        'shipped_by_id' => 'setShippedById'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'printed_on' => 'getPrintedOn',
        'printed' => 'getPrinted',
        'shipped' => 'getShipped',
        'packed_by_id' => 'getPackedById',
        'packed_on' => 'getPackedOn',
        'picked' => 'getPicked',
        'picked_on' => 'getPickedOn',
        'packed' => 'getPacked',
        'shipped_on' => 'getShippedOn',
        'printed_by_id' => 'getPrintedById',
        'picked_by_id' => 'getPickedById',
        'shipped_by_id' => 'getShippedById'
    );
  
    
    /**
      * $printed_on 
      * @var string
      */
    protected $printed_on;
    
    /**
      * $printed 
      * @var bool
      */
    protected $printed;
    
    /**
      * $shipped 
      * @var bool
      */
    protected $shipped;
    
    /**
      * $packed_by_id 
      * @var int
      */
    protected $packed_by_id;
    
    /**
      * $packed_on 
      * @var string
      */
    protected $packed_on;
    
    /**
      * $picked 
      * @var bool
      */
    protected $picked;
    
    /**
      * $picked_on 
      * @var string
      */
    protected $picked_on;
    
    /**
      * $packed 
      * @var bool
      */
    protected $packed;
    
    /**
      * $shipped_on 
      * @var string
      */
    protected $shipped_on;
    
    /**
      * $printed_by_id 
      * @var int
      */
    protected $printed_by_id;
    
    /**
      * $picked_by_id 
      * @var int
      */
    protected $picked_by_id;
    
    /**
      * $shipped_by_id 
      * @var int
      */
    protected $shipped_by_id;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->printed_on = $data["printed_on"];
            $this->printed = $data["printed"];
            $this->shipped = $data["shipped"];
            $this->packed_by_id = $data["packed_by_id"];
            $this->packed_on = $data["packed_on"];
            $this->picked = $data["picked"];
            $this->picked_on = $data["picked_on"];
            $this->packed = $data["packed"];
            $this->shipped_on = $data["shipped_on"];
            $this->printed_by_id = $data["printed_by_id"];
            $this->picked_by_id = $data["picked_by_id"];
            $this->shipped_by_id = $data["shipped_by_id"];
        }
    }
    
    /**
     * Gets printed_on
     * @return string
     */
    public function getPrintedOn()
    {
        return $this->printed_on;
    }
  
    /**
     * Sets printed_on
     * @param string $printed_on 
     * @return $this
     */
    public function setPrintedOn($printed_on)
    {
        
        $this->printed_on = $printed_on;
        return $this;
    }
    
    /**
     * Gets printed
     * @return bool
     */
    public function getPrinted()
    {
        return $this->printed;
    }
  
    /**
     * Sets printed
     * @param bool $printed 
     * @return $this
     */
    public function setPrinted($printed)
    {
        
        $this->printed = $printed;
        return $this;
    }
    
    /**
     * Gets shipped
     * @return bool
     */
    public function getShipped()
    {
        return $this->shipped;
    }
  
    /**
     * Sets shipped
     * @param bool $shipped 
     * @return $this
     */
    public function setShipped($shipped)
    {
        
        $this->shipped = $shipped;
        return $this;
    }
    
    /**
     * Gets packed_by_id
     * @return int
     */
    public function getPackedById()
    {
        return $this->packed_by_id;
    }
  
    /**
     * Sets packed_by_id
     * @param int $packed_by_id 
     * @return $this
     */
    public function setPackedById($packed_by_id)
    {
        
        $this->packed_by_id = $packed_by_id;
        return $this;
    }
    
    /**
     * Gets packed_on
     * @return string
     */
    public function getPackedOn()
    {
        return $this->packed_on;
    }
  
    /**
     * Sets packed_on
     * @param string $packed_on 
     * @return $this
     */
    public function setPackedOn($packed_on)
    {
        
        $this->packed_on = $packed_on;
        return $this;
    }
    
    /**
     * Gets picked
     * @return bool
     */
    public function getPicked()
    {
        return $this->picked;
    }
  
    /**
     * Sets picked
     * @param bool $picked 
     * @return $this
     */
    public function setPicked($picked)
    {
        
        $this->picked = $picked;
        return $this;
    }
    
    /**
     * Gets picked_on
     * @return string
     */
    public function getPickedOn()
    {
        return $this->picked_on;
    }
  
    /**
     * Sets picked_on
     * @param string $picked_on 
     * @return $this
     */
    public function setPickedOn($picked_on)
    {
        
        $this->picked_on = $picked_on;
        return $this;
    }
    
    /**
     * Gets packed
     * @return bool
     */
    public function getPacked()
    {
        return $this->packed;
    }
  
    /**
     * Sets packed
     * @param bool $packed 
     * @return $this
     */
    public function setPacked($packed)
    {
        
        $this->packed = $packed;
        return $this;
    }
    
    /**
     * Gets shipped_on
     * @return string
     */
    public function getShippedOn()
    {
        return $this->shipped_on;
    }
  
    /**
     * Sets shipped_on
     * @param string $shipped_on 
     * @return $this
     */
    public function setShippedOn($shipped_on)
    {
        
        $this->shipped_on = $shipped_on;
        return $this;
    }
    
    /**
     * Gets printed_by_id
     * @return int
     */
    public function getPrintedById()
    {
        return $this->printed_by_id;
    }
  
    /**
     * Sets printed_by_id
     * @param int $printed_by_id 
     * @return $this
     */
    public function setPrintedById($printed_by_id)
    {
        
        $this->printed_by_id = $printed_by_id;
        return $this;
    }
    
    /**
     * Gets picked_by_id
     * @return int
     */
    public function getPickedById()
    {
        return $this->picked_by_id;
    }
  
    /**
     * Sets picked_by_id
     * @param int $picked_by_id 
     * @return $this
     */
    public function setPickedById($picked_by_id)
    {
        
        $this->picked_by_id = $picked_by_id;
        return $this;
    }
    
    /**
     * Gets shipped_by_id
     * @return int
     */
    public function getShippedById()
    {
        return $this->shipped_by_id;
    }
  
    /**
     * Sets shipped_by_id
     * @param int $shipped_by_id 
     * @return $this
     */
    public function setShippedById($shipped_by_id)
    {
        
        $this->shipped_by_id = $shipped_by_id;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
